package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutojobsalesinvoiceservicechargelineAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsalesinvoiceservicechargelineAllPropertiesEquals(
        Autojobsalesinvoiceservicechargeline expected,
        Autojobsalesinvoiceservicechargeline actual
    ) {
        assertAutojobsalesinvoiceservicechargelineAutoGeneratedPropertiesEquals(expected, actual);
        assertAutojobsalesinvoiceservicechargelineAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsalesinvoiceservicechargelineAllUpdatablePropertiesEquals(
        Autojobsalesinvoiceservicechargeline expected,
        Autojobsalesinvoiceservicechargeline actual
    ) {
        assertAutojobsalesinvoiceservicechargelineUpdatableFieldsEquals(expected, actual);
        assertAutojobsalesinvoiceservicechargelineUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsalesinvoiceservicechargelineAutoGeneratedPropertiesEquals(
        Autojobsalesinvoiceservicechargeline expected,
        Autojobsalesinvoiceservicechargeline actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsalesinvoiceservicechargeline auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsalesinvoiceservicechargelineUpdatableFieldsEquals(
        Autojobsalesinvoiceservicechargeline expected,
        Autojobsalesinvoiceservicechargeline actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsalesinvoiceservicechargeline relevant properties")
            .satisfies(e -> assertThat(e.getInvoiceid()).as("check invoiceid").isEqualTo(actual.getInvoiceid()))
            .satisfies(e -> assertThat(e.getLineid()).as("check lineid").isEqualTo(actual.getLineid()))
            .satisfies(e -> assertThat(e.getOptionid()).as("check optionid").isEqualTo(actual.getOptionid()))
            .satisfies(e -> assertThat(e.getServicename()).as("check servicename").isEqualTo(actual.getServicename()))
            .satisfies(e -> assertThat(e.getServicediscription()).as("check servicediscription").isEqualTo(actual.getServicediscription()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getAddedbyid()).as("check addedbyid").isEqualTo(actual.getAddedbyid()))
            .satisfies(e -> assertThat(e.getIscustomersrvice()).as("check iscustomersrvice").isEqualTo(actual.getIscustomersrvice()))
            .satisfies(e -> assertThat(e.getDiscount()).as("check discount").isEqualTo(actual.getDiscount()))
            .satisfies(e -> assertThat(e.getServiceprice()).as("check serviceprice").isEqualTo(actual.getServiceprice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsalesinvoiceservicechargelineUpdatableRelationshipsEquals(
        Autojobsalesinvoiceservicechargeline expected,
        Autojobsalesinvoiceservicechargeline actual
    ) {
        // empty method
    }
}
