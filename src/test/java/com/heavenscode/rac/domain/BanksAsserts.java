package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BanksAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBanksAllPropertiesEquals(Banks expected, Banks actual) {
        assertBanksAutoGeneratedPropertiesEquals(expected, actual);
        assertBanksAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBanksAllUpdatablePropertiesEquals(Banks expected, Banks actual) {
        assertBanksUpdatableFieldsEquals(expected, actual);
        assertBanksUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBanksAutoGeneratedPropertiesEquals(Banks expected, Banks actual) {
        assertThat(actual)
            .as("Verify Banks auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBanksUpdatableFieldsEquals(Banks expected, Banks actual) {
        assertThat(actual)
            .as("Verify Banks relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getLmu()).as("check lmu").isEqualTo(expected.getLmu()))
            .satisfies(a -> assertThat(a.getLmd()).as("check lmd").isEqualTo(expected.getLmd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBanksUpdatableRelationshipsEquals(Banks expected, Banks actual) {
        // empty method
    }
}
