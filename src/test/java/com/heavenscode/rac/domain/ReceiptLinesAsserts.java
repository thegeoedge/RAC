package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReceiptLinesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReceiptLinesAllPropertiesEquals(ReceiptLines expected, ReceiptLines actual) {
        assertReceiptLinesAutoGeneratedPropertiesEquals(expected, actual);
        assertReceiptLinesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReceiptLinesAllUpdatablePropertiesEquals(ReceiptLines expected, ReceiptLines actual) {
        assertReceiptLinesUpdatableFieldsEquals(expected, actual);
        assertReceiptLinesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReceiptLinesAutoGeneratedPropertiesEquals(ReceiptLines expected, ReceiptLines actual) {
        assertThat(expected)
            .as("Verify ReceiptLines auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReceiptLinesUpdatableFieldsEquals(ReceiptLines expected, ReceiptLines actual) {
        assertThat(expected)
            .as("Verify ReceiptLines relevant properties")
            .satisfies(e -> assertThat(e.getLineid()).as("check lineid").isEqualTo(actual.getLineid()))
            .satisfies(e -> assertThat(e.getInvoicecode()).as("check invoicecode").isEqualTo(actual.getInvoicecode()))
            .satisfies(e -> assertThat(e.getInvoicetype()).as("check invoicetype").isEqualTo(actual.getInvoicetype()))
            .satisfies(e -> assertThat(e.getOriginalamount()).as("check originalamount").isEqualTo(actual.getOriginalamount()))
            .satisfies(e -> assertThat(e.getAmountowing()).as("check amountowing").isEqualTo(actual.getAmountowing()))
            .satisfies(e -> assertThat(e.getDiscountavailable()).as("check discountavailable").isEqualTo(actual.getDiscountavailable()))
            .satisfies(e -> assertThat(e.getDiscounttaken()).as("check discounttaken").isEqualTo(actual.getDiscounttaken()))
            .satisfies(e -> assertThat(e.getAmountreceived()).as("check amountreceived").isEqualTo(actual.getAmountreceived()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getAccountid()).as("check accountid").isEqualTo(actual.getAccountid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReceiptLinesUpdatableRelationshipsEquals(ReceiptLines expected, ReceiptLines actual) {
        // empty method
    }
}
