package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutocarejobAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobAllPropertiesEquals(Autocarejob expected, Autocarejob actual) {
        assertAutocarejobAutoGeneratedPropertiesEquals(expected, actual);
        assertAutocarejobAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobAllUpdatablePropertiesEquals(Autocarejob expected, Autocarejob actual) {
        assertAutocarejobUpdatableFieldsEquals(expected, actual);
        assertAutocarejobUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobAutoGeneratedPropertiesEquals(Autocarejob expected, Autocarejob actual) {
        assertThat(actual)
            .as("Verify Autocarejob auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobUpdatableFieldsEquals(Autocarejob expected, Autocarejob actual) {
        assertThat(actual)
            .as("Verify Autocarejob relevant properties")
            .satisfies(a -> assertThat(a.getJobnumber()).as("check jobnumber").isEqualTo(expected.getJobnumber()))
            .satisfies(a -> assertThat(a.getVehicleid()).as("check vehicleid").isEqualTo(expected.getVehicleid()))
            .satisfies(a -> assertThat(a.getVehiclenumber()).as("check vehiclenumber").isEqualTo(expected.getVehiclenumber()))
            .satisfies(a -> assertThat(a.getMillage()).as("check millage").isEqualTo(expected.getMillage()))
            .satisfies(a -> assertThat(a.getNextmillage()).as("check nextmillage").isEqualTo(expected.getNextmillage()))
            .satisfies(a -> assertThat(a.getNextservicedate()).as("check nextservicedate").isEqualTo(expected.getNextservicedate()))
            .satisfies(a -> assertThat(a.getVehicletypeid()).as("check vehicletypeid").isEqualTo(expected.getVehicletypeid()))
            .satisfies(a -> assertThat(a.getJobtypeid()).as("check jobtypeid").isEqualTo(expected.getJobtypeid()))
            .satisfies(a -> assertThat(a.getJobtypename()).as("check jobtypename").isEqualTo(expected.getJobtypename()))
            .satisfies(a -> assertThat(a.getJobopenby()).as("check jobopenby").isEqualTo(expected.getJobopenby()))
            .satisfies(a -> assertThat(a.getJobopentime()).as("check jobopentime").isEqualTo(expected.getJobopentime()))
            .satisfies(a -> assertThat(a.getLmu()).as("check lmu").isEqualTo(expected.getLmu()))
            .satisfies(a -> assertThat(a.getLmd()).as("check lmd").isEqualTo(expected.getLmd()))
            .satisfies(a -> assertThat(a.getSpecialrquirments()).as("check specialrquirments").isEqualTo(expected.getSpecialrquirments()))
            .satisfies(
                a -> assertThat(a.getSpecialinstructions()).as("check specialinstructions").isEqualTo(expected.getSpecialinstructions())
            )
            .satisfies(a -> assertThat(a.getRemarks()).as("check remarks").isEqualTo(expected.getRemarks()))
            .satisfies(
                a ->
                    assertThat(a.getNextserviceinstructions())
                        .as("check nextserviceinstructions")
                        .isEqualTo(expected.getNextserviceinstructions())
            )
            .satisfies(
                a ->
                    assertThat(a.getLastserviceinstructions())
                        .as("check lastserviceinstructions")
                        .isEqualTo(expected.getLastserviceinstructions())
            )
            .satisfies(a -> assertThat(a.getIsadvisorchecked()).as("check isadvisorchecked").isEqualTo(expected.getIsadvisorchecked()))
            .satisfies(a -> assertThat(a.getIsempallocated()).as("check isempallocated").isEqualTo(expected.getIsempallocated()))
            .satisfies(a -> assertThat(a.getJobclosetime()).as("check jobclosetime").isEqualTo(expected.getJobclosetime()))
            .satisfies(a -> assertThat(a.getIsjobclose()).as("check isjobclose").isEqualTo(expected.getIsjobclose()))
            .satisfies(a -> assertThat(a.getIsfeedback()).as("check isfeedback").isEqualTo(expected.getIsfeedback()))
            .satisfies(a -> assertThat(a.getFeedbackstatusid()).as("check feedbackstatusid").isEqualTo(expected.getFeedbackstatusid()))
            .satisfies(a -> assertThat(a.getCustomername()).as("check customername").isEqualTo(expected.getCustomername()))
            .satisfies(a -> assertThat(a.getCustomertel()).as("check customertel").isEqualTo(expected.getCustomertel()))
            .satisfies(a -> assertThat(a.getCustomerid()).as("check customerid").isEqualTo(expected.getCustomerid()))
            .satisfies(a -> assertThat(a.getAdvisorfinalcheck()).as("check advisorfinalcheck").isEqualTo(expected.getAdvisorfinalcheck()))
            .satisfies(a -> assertThat(a.getJobdate()).as("check jobdate").isEqualTo(expected.getJobdate()))
            .satisfies(a -> assertThat(a.getIscompanyservice()).as("check iscompanyservice").isEqualTo(expected.getIscompanyservice()))
            .satisfies(a -> assertThat(a.getFreeservicenumber()).as("check freeservicenumber").isEqualTo(expected.getFreeservicenumber()))
            .satisfies(a -> assertThat(a.getCompanyid()).as("check companyid").isEqualTo(expected.getCompanyid()))
            .satisfies(a -> assertThat(a.getUpdatetocustomer()).as("check updatetocustomer").isEqualTo(expected.getUpdatetocustomer()))
            .satisfies(a -> assertThat(a.getNextgearoilmilage()).as("check nextgearoilmilage").isEqualTo(expected.getNextgearoilmilage()))
            .satisfies(a -> assertThat(a.getIsjobinvoiced()).as("check isjobinvoiced").isEqualTo(expected.getIsjobinvoiced()))
            .satisfies(a -> assertThat(a.getIswaiting()).as("check iswaiting").isEqualTo(expected.getIswaiting()))
            .satisfies(a -> assertThat(a.getIscustomercomment()).as("check iscustomercomment").isEqualTo(expected.getIscustomercomment()))
            .satisfies(a -> assertThat(a.getImagefolder()).as("check imagefolder").isEqualTo(expected.getImagefolder()))
            .satisfies(a -> assertThat(a.getFrontimage()).as("check frontimage").isEqualTo(expected.getFrontimage()))
            .satisfies(a -> assertThat(a.getLeftimage()).as("check leftimage").isEqualTo(expected.getLeftimage()))
            .satisfies(a -> assertThat(a.getRightimage()).as("check rightimage").isEqualTo(expected.getRightimage()))
            .satisfies(a -> assertThat(a.getBackimage()).as("check backimage").isEqualTo(expected.getBackimage()))
            .satisfies(a -> assertThat(a.getDashboardimage()).as("check dashboardimage").isEqualTo(expected.getDashboardimage()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutocarejobUpdatableRelationshipsEquals(Autocarejob expected, Autocarejob actual) {
        // empty method
    }
}
