package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SystemSettingsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemSettingsAllPropertiesEquals(SystemSettings expected, SystemSettings actual) {
        assertSystemSettingsAutoGeneratedPropertiesEquals(expected, actual);
        assertSystemSettingsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemSettingsAllUpdatablePropertiesEquals(SystemSettings expected, SystemSettings actual) {
        assertSystemSettingsUpdatableFieldsEquals(expected, actual);
        assertSystemSettingsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemSettingsAutoGeneratedPropertiesEquals(SystemSettings expected, SystemSettings actual) {
        assertThat(expected)
            .as("Verify SystemSettings auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemSettingsUpdatableFieldsEquals(SystemSettings expected, SystemSettings actual) {
        assertThat(expected)
            .as("Verify SystemSettings relevant properties")
            .satisfies(e -> assertThat(e.getKey()).as("check key").isEqualTo(actual.getKey()))
            .satisfies(e -> assertThat(e.getLastValue()).as("check lastValue").isEqualTo(actual.getLastValue()))
            .satisfies(e -> assertThat(e.getNextValue()).as("check nextValue").isEqualTo(actual.getNextValue()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemSettingsUpdatableRelationshipsEquals(SystemSettings expected, SystemSettings actual) {
        // empty method
    }
}
