package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutojobsinvoicelinebatchesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoicelinebatchesAllPropertiesEquals(
        Autojobsinvoicelinebatches expected,
        Autojobsinvoicelinebatches actual
    ) {
        assertAutojobsinvoicelinebatchesAutoGeneratedPropertiesEquals(expected, actual);
        assertAutojobsinvoicelinebatchesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoicelinebatchesAllUpdatablePropertiesEquals(
        Autojobsinvoicelinebatches expected,
        Autojobsinvoicelinebatches actual
    ) {
        assertAutojobsinvoicelinebatchesUpdatableFieldsEquals(expected, actual);
        assertAutojobsinvoicelinebatchesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoicelinebatchesAutoGeneratedPropertiesEquals(
        Autojobsinvoicelinebatches expected,
        Autojobsinvoicelinebatches actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsinvoicelinebatches auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoicelinebatchesUpdatableFieldsEquals(
        Autojobsinvoicelinebatches expected,
        Autojobsinvoicelinebatches actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsinvoicelinebatches relevant properties")
            .satisfies(e -> assertThat(e.getLineid()).as("check lineid").isEqualTo(actual.getLineid()))
            .satisfies(e -> assertThat(e.getBatchlineid()).as("check batchlineid").isEqualTo(actual.getBatchlineid()))
            .satisfies(e -> assertThat(e.getItemid()).as("check itemid").isEqualTo(actual.getItemid()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getBatchid()).as("check batchid").isEqualTo(actual.getBatchid()))
            .satisfies(e -> assertThat(e.getBatchcode()).as("check batchcode").isEqualTo(actual.getBatchcode()))
            .satisfies(e -> assertThat(e.getTxdate()).as("check txdate").isEqualTo(actual.getTxdate()))
            .satisfies(e -> assertThat(e.getManufacturedate()).as("check manufacturedate").isEqualTo(actual.getManufacturedate()))
            .satisfies(e -> assertThat(e.getExpireddate()).as("check expireddate").isEqualTo(actual.getExpireddate()))
            .satisfies(e -> assertThat(e.getQty()).as("check qty").isEqualTo(actual.getQty()))
            .satisfies(e -> assertThat(e.getCost()).as("check cost").isEqualTo(actual.getCost()))
            .satisfies(e -> assertThat(e.getPrice()).as("check price").isEqualTo(actual.getPrice()))
            .satisfies(e -> assertThat(e.getNotes()).as("check notes").isEqualTo(actual.getNotes()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getNbt()).as("check nbt").isEqualTo(actual.getNbt()))
            .satisfies(e -> assertThat(e.getVat()).as("check vat").isEqualTo(actual.getVat()))
            .satisfies(e -> assertThat(e.getDiscount()).as("check discount").isEqualTo(actual.getDiscount()))
            .satisfies(e -> assertThat(e.getTotal()).as("check total").isEqualTo(actual.getTotal()))
            .satisfies(e -> assertThat(e.getIssued()).as("check issued").isEqualTo(actual.getIssued()))
            .satisfies(e -> assertThat(e.getIssuedby()).as("check issuedby").isEqualTo(actual.getIssuedby()))
            .satisfies(e -> assertThat(e.getIssueddatetime()).as("check issueddatetime").isEqualTo(actual.getIssueddatetime()))
            .satisfies(e -> assertThat(e.getAddedbyid()).as("check addedbyid").isEqualTo(actual.getAddedbyid()))
            .satisfies(e -> assertThat(e.getCanceloptid()).as("check canceloptid").isEqualTo(actual.getCanceloptid()))
            .satisfies(e -> assertThat(e.getCancelopt()).as("check cancelopt").isEqualTo(actual.getCancelopt()))
            .satisfies(e -> assertThat(e.getCancelby()).as("check cancelby").isEqualTo(actual.getCancelby()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsinvoicelinebatchesUpdatableRelationshipsEquals(
        Autojobsinvoicelinebatches expected,
        Autojobsinvoicelinebatches actual
    ) {
        // empty method
    }
}
