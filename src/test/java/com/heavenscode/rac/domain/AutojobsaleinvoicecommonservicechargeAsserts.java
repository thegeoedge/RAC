package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutojobsaleinvoicecommonservicechargeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsaleinvoicecommonservicechargeAllPropertiesEquals(
        Autojobsaleinvoicecommonservicecharge expected,
        Autojobsaleinvoicecommonservicecharge actual
    ) {
        assertAutojobsaleinvoicecommonservicechargeAutoGeneratedPropertiesEquals(expected, actual);
        assertAutojobsaleinvoicecommonservicechargeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsaleinvoicecommonservicechargeAllUpdatablePropertiesEquals(
        Autojobsaleinvoicecommonservicecharge expected,
        Autojobsaleinvoicecommonservicecharge actual
    ) {
        assertAutojobsaleinvoicecommonservicechargeUpdatableFieldsEquals(expected, actual);
        assertAutojobsaleinvoicecommonservicechargeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsaleinvoicecommonservicechargeAutoGeneratedPropertiesEquals(
        Autojobsaleinvoicecommonservicecharge expected,
        Autojobsaleinvoicecommonservicecharge actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsaleinvoicecommonservicecharge auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsaleinvoicecommonservicechargeUpdatableFieldsEquals(
        Autojobsaleinvoicecommonservicecharge expected,
        Autojobsaleinvoicecommonservicecharge actual
    ) {
        assertThat(expected)
            .as("Verify Autojobsaleinvoicecommonservicecharge relevant properties")
            .satisfies(e -> assertThat(e.getInvoiceid()).as("check invoiceid").isEqualTo(actual.getInvoiceid()))
            .satisfies(e -> assertThat(e.getLineid()).as("check lineid").isEqualTo(actual.getLineid()))
            .satisfies(e -> assertThat(e.getOptionid()).as("check optionid").isEqualTo(actual.getOptionid()))
            .satisfies(e -> assertThat(e.getMainid()).as("check mainid").isEqualTo(actual.getMainid()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getAddedbyid()).as("check addedbyid").isEqualTo(actual.getAddedbyid()))
            .satisfies(e -> assertThat(e.getDiscount()).as("check discount").isEqualTo(actual.getDiscount()))
            .satisfies(e -> assertThat(e.getServiceprice()).as("check serviceprice").isEqualTo(actual.getServiceprice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutojobsaleinvoicecommonservicechargeUpdatableRelationshipsEquals(
        Autojobsaleinvoicecommonservicecharge expected,
        Autojobsaleinvoicecommonservicecharge actual
    ) {
        // empty method
    }
}
