package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SalesInvoiceServiceChargeLineDummyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalesInvoiceServiceChargeLineDummyAllPropertiesEquals(
        SalesInvoiceServiceChargeLineDummy expected,
        SalesInvoiceServiceChargeLineDummy actual
    ) {
        assertSalesInvoiceServiceChargeLineDummyAutoGeneratedPropertiesEquals(expected, actual);
        assertSalesInvoiceServiceChargeLineDummyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalesInvoiceServiceChargeLineDummyAllUpdatablePropertiesEquals(
        SalesInvoiceServiceChargeLineDummy expected,
        SalesInvoiceServiceChargeLineDummy actual
    ) {
        assertSalesInvoiceServiceChargeLineDummyUpdatableFieldsEquals(expected, actual);
        assertSalesInvoiceServiceChargeLineDummyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalesInvoiceServiceChargeLineDummyAutoGeneratedPropertiesEquals(
        SalesInvoiceServiceChargeLineDummy expected,
        SalesInvoiceServiceChargeLineDummy actual
    ) {
        assertThat(expected)
            .as("Verify SalesInvoiceServiceChargeLineDummy auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalesInvoiceServiceChargeLineDummyUpdatableFieldsEquals(
        SalesInvoiceServiceChargeLineDummy expected,
        SalesInvoiceServiceChargeLineDummy actual
    ) {
        assertThat(expected)
            .as("Verify SalesInvoiceServiceChargeLineDummy relevant properties")
            .satisfies(e -> assertThat(e.getInvoiceId()).as("check invoiceId").isEqualTo(actual.getInvoiceId()))
            .satisfies(e -> assertThat(e.getLineId()).as("check lineId").isEqualTo(actual.getLineId()))
            .satisfies(e -> assertThat(e.getOptionId()).as("check optionId").isEqualTo(actual.getOptionId()))
            .satisfies(e -> assertThat(e.getServiceName()).as("check serviceName").isEqualTo(actual.getServiceName()))
            .satisfies(e -> assertThat(e.getServiceDescription()).as("check serviceDescription").isEqualTo(actual.getServiceDescription()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getIsCustomerService()).as("check isCustomerService").isEqualTo(actual.getIsCustomerService()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSalesInvoiceServiceChargeLineDummyUpdatableRelationshipsEquals(
        SalesInvoiceServiceChargeLineDummy expected,
        SalesInvoiceServiceChargeLineDummy actual
    ) {
        // empty method
    }
}
