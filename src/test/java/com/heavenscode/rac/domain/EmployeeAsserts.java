package com.heavenscode.rac.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmployeeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAllPropertiesEquals(Employee expected, Employee actual) {
        assertEmployeeAutoGeneratedPropertiesEquals(expected, actual);
        assertEmployeeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAllUpdatablePropertiesEquals(Employee expected, Employee actual) {
        assertEmployeeUpdatableFieldsEquals(expected, actual);
        assertEmployeeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAutoGeneratedPropertiesEquals(Employee expected, Employee actual) {
        assertThat(expected)
            .as("Verify Employee auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeUpdatableFieldsEquals(Employee expected, Employee actual) {
        assertThat(expected)
            .as("Verify Employee relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getFullName()).as("check fullName").isEqualTo(actual.getFullName()))
            .satisfies(e -> assertThat(e.getNameWithInitials()).as("check nameWithInitials").isEqualTo(actual.getNameWithInitials()))
            .satisfies(e -> assertThat(e.getSurname()).as("check surname").isEqualTo(actual.getSurname()))
            .satisfies(e -> assertThat(e.getNicNumber()).as("check nicNumber").isEqualTo(actual.getNicNumber()))
            .satisfies(e -> assertThat(e.getNicIssueDate()).as("check nicIssueDate").isEqualTo(actual.getNicIssueDate()))
            .satisfies(e -> assertThat(e.getPassportNo()).as("check passportNo").isEqualTo(actual.getPassportNo()))
            .satisfies(e -> assertThat(e.getPassportIssueDate()).as("check passportIssueDate").isEqualTo(actual.getPassportIssueDate()))
            .satisfies(e -> assertThat(e.getPassportExpDate()).as("check passportExpDate").isEqualTo(actual.getPassportExpDate()))
            .satisfies(e -> assertThat(e.getDateOfBirth()).as("check dateOfBirth").isEqualTo(actual.getDateOfBirth()))
            .satisfies(e -> assertThat(e.getAge()).as("check age").isEqualTo(actual.getAge()))
            .satisfies(e -> assertThat(e.getBloodGroup()).as("check bloodGroup").isEqualTo(actual.getBloodGroup()))
            .satisfies(e -> assertThat(e.getGender()).as("check gender").isEqualTo(actual.getGender()))
            .satisfies(e -> assertThat(e.getPhone2()).as("check phone2").isEqualTo(actual.getPhone2()))
            .satisfies(e -> assertThat(e.getMaritalStatus()).as("check maritalStatus").isEqualTo(actual.getMaritalStatus()))
            .satisfies(e -> assertThat(e.getMarriedDate()).as("check marriedDate").isEqualTo(actual.getMarriedDate()))
            .satisfies(e -> assertThat(e.getNationality()).as("check nationality").isEqualTo(actual.getNationality()))
            .satisfies(e -> assertThat(e.getPermanentAddress()).as("check permanentAddress").isEqualTo(actual.getPermanentAddress()))
            .satisfies(e -> assertThat(e.getTemporaryAddress()).as("check temporaryAddress").isEqualTo(actual.getTemporaryAddress()))
            .satisfies(e -> assertThat(e.getHome()).as("check home").isEqualTo(actual.getHome()))
            .satisfies(e -> assertThat(e.getMobile()).as("check mobile").isEqualTo(actual.getMobile()))
            .satisfies(e -> assertThat(e.getFax()).as("check fax").isEqualTo(actual.getFax()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(
                e ->
                    assertThat(e.getEmergencyContactPerson())
                        .as("check emergencyContactPerson")
                        .isEqualTo(actual.getEmergencyContactPerson())
            )
            .satisfies(e -> assertThat(e.getEmergencyNumber()).as("check emergencyNumber").isEqualTo(actual.getEmergencyNumber()))
            .satisfies(e -> assertThat(e.getCity()).as("check city").isEqualTo(actual.getCity()))
            .satisfies(e -> assertThat(e.getDistrict()).as("check district").isEqualTo(actual.getDistrict()))
            .satisfies(e -> assertThat(e.getProvince()).as("check province").isEqualTo(actual.getProvince()))
            .satisfies(e -> assertThat(e.getElectorate()).as("check electorate").isEqualTo(actual.getElectorate()))
            .satisfies(e -> assertThat(e.getMainRoad()).as("check mainRoad").isEqualTo(actual.getMainRoad()))
            .satisfies(e -> assertThat(e.getModeOfTransport()).as("check modeOfTransport").isEqualTo(actual.getModeOfTransport()))
            .satisfies(e -> assertThat(e.getDistance()).as("check distance").isEqualTo(actual.getDistance()))
            .satisfies(e -> assertThat(e.getTravelTime()).as("check travelTime").isEqualTo(actual.getTravelTime()))
            .satisfies(e -> assertThat(e.getUsername()).as("check username").isEqualTo(actual.getUsername()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()))
            .satisfies(e -> assertThat(e.getDepartmentID()).as("check departmentID").isEqualTo(actual.getDepartmentID()))
            .satisfies(e -> assertThat(e.getDepartmentCode()).as("check departmentCode").isEqualTo(actual.getDepartmentCode()))
            .satisfies(e -> assertThat(e.getEmpRegDate()).as("check empRegDate").isEqualTo(actual.getEmpRegDate()))
            .satisfies(e -> assertThat(e.getLmu()).as("check lmu").isEqualTo(actual.getLmu()))
            .satisfies(e -> assertThat(e.getLmd()).as("check lmd").isEqualTo(actual.getLmd()))
            .satisfies(e -> assertThat(e.getRoleId()).as("check roleId").isEqualTo(actual.getRoleId()))
            .satisfies(e -> assertThat(e.getRoleName()).as("check roleName").isEqualTo(actual.getRoleName()))
            .satisfies(e -> assertThat(e.getEpf()).as("check epf").isEqualTo(actual.getEpf()))
            .satisfies(e -> assertThat(e.getEtf()).as("check etf").isEqualTo(actual.getEtf()))
            .satisfies(e -> assertThat(e.getDateJoined()).as("check dateJoined").isEqualTo(actual.getDateJoined()))
            .satisfies(e -> assertThat(e.getDateResigned()).as("check dateResigned").isEqualTo(actual.getDateResigned()))
            .satisfies(e -> assertThat(e.getDesignation()).as("check designation").isEqualTo(actual.getDesignation()))
            .satisfies(e -> assertThat(e.getJobStatusId()).as("check jobStatusId").isEqualTo(actual.getJobStatusId()))
            .satisfies(e -> assertThat(e.getJobStatusName()).as("check jobStatusName").isEqualTo(actual.getJobStatusName()))
            .satisfies(e -> assertThat(e.getImagePath()).as("check imagePath").isEqualTo(actual.getImagePath()))
            .satisfies(e -> assertThat(e.getBankAccountNo()).as("check bankAccountNo").isEqualTo(actual.getBankAccountNo()))
            .satisfies(e -> assertThat(e.getBankId()).as("check bankId").isEqualTo(actual.getBankId()))
            .satisfies(e -> assertThat(e.getBankName()).as("check bankName").isEqualTo(actual.getBankName()))
            .satisfies(e -> assertThat(e.getBranchId()).as("check branchId").isEqualTo(actual.getBranchId()))
            .satisfies(e -> assertThat(e.getBranchName()).as("check branchName").isEqualTo(actual.getBranchName()))
            .satisfies(e -> assertThat(e.getSalaryPaymentBasis()).as("check salaryPaymentBasis").isEqualTo(actual.getSalaryPaymentBasis()))
            .satisfies(e -> assertThat(e.getEmpStatus()).as("check empStatus").isEqualTo(actual.getEmpStatus()))
            .satisfies(e -> assertThat(e.getReligion()).as("check religion").isEqualTo(actual.getReligion()))
            .satisfies(e -> assertThat(e.getExperience()).as("check experience").isEqualTo(actual.getExperience()))
            .satisfies(e -> assertThat(e.getQualifications()).as("check qualifications").isEqualTo(actual.getQualifications()))
            .satisfies(e -> assertThat(e.getAttendanceCode()).as("check attendanceCode").isEqualTo(actual.getAttendanceCode()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeUpdatableRelationshipsEquals(Employee expected, Employee actual) {
        // empty method
    }
}
